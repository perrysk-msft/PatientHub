<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>